// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ –∞–¥—Ä–µ—Å–∞–º–∏
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs, updateDoc, doc } from 'firebase/firestore';

// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const firebaseConfig = {
  apiKey: "AIzaSyBBdniQX1DAdz8SJwO5SPgz8BHsXFsQeXA",
  authDomain: "jkh-system-new.firebaseapp.com",
  projectId: "jkh-system-new",
  storageBucket: "jkh-system-new.firebasestorage.app",
  messagingSenderId: "844684475393",
  appId: "1:844684475393:web:1afb72cbde9b286b545400",
  measurementId: "G-HNZMR544W1"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–º–µ–Ω –∏ –∞–¥—Ä–µ—Å–æ–≤
function generateProperData(index) {
  const streets = [
    '—É–ª. –õ–µ–Ω–∏–Ω–∞', '—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è', '—É–ª. –ú–∏—Ä–∞', '—É–ª. –ü—É—à–∫–∏–Ω–∞', '—É–ª. –ú–∞–Ω–∞—Å–∞',
    '—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞', '—É–ª. –§—Ä—É–Ω–∑–µ', '—É–ª. –ö–∞–ª–∏–Ω–∏–Ω–∞', '—É–ª. –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ', '—É–ª. –ß–µ—Ö–æ–≤–∞',
    '—É–ª. –¢–æ–ª—Å—Ç–æ–≥–æ', '—É–ª. –ü–æ–∫—Ä–æ–≤—Å–∫–∞—è', '—É–ª. –ö–æ—Å–º–æ–Ω–∞–≤—Ç–æ–≤', '—É–ª. –°–∞–Ω—Å—ã–∑–±–∞–µ–≤–∞',
    '—É–ª. –°–∞–¥–æ–≤–∞—è', '—É–ª. –ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º–∞—è', '—É–ª. –ñ–∞–Ω—Ç–∞–µ–≤–∞', '—É–ª. –ë–µ—Ä–µ–≥–æ–≤–∞—è', '—É–ª. –ú–µ–∂–µ–≤–∞—è',
    '—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è', '—É–ª. –®–∫–æ–ª—å–Ω–∞—è', '—É–ª. –ë–æ–ª—å–Ω–∏—á–Ω–∞—è', '—É–ª. –ó–∞–≤–æ–¥—Å–∫–∞—è', '—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è'
  ];
  
  const names = [
    '–ê–±–¥—É–ª–ª–∞–µ–≤', '–ë–∞–π–±–µ–∫–æ–≤', '–í–∞–ª–∏–µ–≤', '–ì–∞–∑–∏–µ–≤', '–î–∞–≤–ª–µ—Ç–æ–≤', '–ï—Ä–º–µ–∫–æ–≤', '–ñ—É–º–∞–µ–≤',
    '–ó–∞–π—Ü–µ–≤', '–ò–±—Ä–∞–µ–≤', '–ö–∞–ª–º–∞—Ç–æ–≤', '–õ–∞—Ç—ã–ø–æ–≤', '–ú–∞–º–±–µ—Ç–æ–≤', '–ù—É—Ä–º–∞—Ç–æ–≤', '–û—Ä–æ–∑–æ–≤',
    '–ü–µ—Ç—Ä–æ–≤', '–†–∞—Ö–∏–º–æ–≤', '–°–∞–¥—ã–∫–æ–≤', '–¢–æ–∫—Ç–æ–µ–≤', '–£—Å–µ–Ω–æ–≤', '–§–µ–¥–æ—Ä–æ–≤', '–•–∞—Å–∞–Ω–æ–≤',
    '–¶–≤–µ—Ç–∫–æ–≤', '–ß–µ—Ä–Ω–æ–≤', '–®–∞—Ä–∏–ø–æ–≤', '–©–µ—Ä–±–∞–∫–æ–≤', '–≠—Ä–≥–µ—à–æ–≤', '–Æ—Å—É–ø–æ–≤', '–Ø—Ä–µ–º–µ–Ω–∫–æ',
    '–ê—Ö–º–µ–¥–æ–≤', '–ë–µ–∫–∏—Ä–æ–≤', '–í–æ–ª–∫–æ–≤', '–ì—Ä–∏–≥–æ—Ä—å–µ–≤', '–î–º–∏—Ç—Ä–∏–µ–≤', '–ï—Ä—à–æ–≤', '–ñ—É–∫–æ–≤',
    '–ó—É–µ–≤', '–ò–≤–∞–Ω–æ–≤', '–ö–æ–∑–ª–æ–≤', '–õ–µ–±–µ–¥–µ–≤', '–ú–æ—Ä–æ–∑–æ–≤', '–ù–æ–≤–∏–∫–æ–≤', '–û—Å–∏–ø–æ–≤'
  ];

  const street = streets[index % streets.length];
  const name = names[index % names.length];
  const houseNumber = (index % 200) + 1;
  const apartment = (index % 50) + 1;
  
  return {
    fullName: `${name} ${String.fromCharCode(65 + (index % 26))}.${String.fromCharCode(65 + ((index + 1) % 26))}.`,
    address: `${street}, –¥–æ–º ${houseNumber}${index % 3 === 0 ? ` –∫–≤. ${apartment}` : ''}`,
    controllerName: index % 2 === 0 ? '–¢–∞–≥–∞–µ–≤–∞ –°.–ñ.' : '–°–∞–ø–æ–∂–Ω–∏–∫–æ–≤–∞ –ò.–í.'
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
async function updateAbonentsNames() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω –∏ –∞–¥—Ä–µ—Å–æ–≤ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
    const existingAbonents = await getDocs(collection(db, 'abonents'));
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${existingAbonents.size} –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ`);
    
    if (existingAbonents.size === 0) {
      console.log('‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É
    let updatedCount = 0;
    let skippedCount = 0;
    
    for (let i = 0; i < existingAbonents.docs.length; i++) {
      const abonentDoc = existingAbonents.docs[i];
      const abonentData = abonentDoc.data();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å (–µ—Å–ª–∏ –∏–º—è —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
      if (abonentData.fullName && 
          !abonentData.fullName.includes('–ê–±–æ–Ω–µ–Ω—Ç') && 
          !abonentData.fullName.includes('–∞–±–æ–Ω–µ–Ω—Ç') &&
          abonentData.address &&
          !abonentData.address.includes('undefined')) {
        skippedCount++;
        continue;
      }
      
      try {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const properData = generateProperData(i);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        await updateDoc(doc(db, 'abonents', abonentDoc.id), {
          fullName: properData.fullName,
          address: properData.address,
          controllerName: properData.controllerName
        });
        
        updatedCount++;
        
        if (updatedCount % 50 === 0) {
          console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –∞–±–æ–Ω–µ–Ω—Ç–æ–≤...`);
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–±–æ–Ω–µ–Ω—Ç–∞ ${abonentDoc.id}:`, error);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
      if (i % 10 === 0) {
        await new Promise(resolve => setTimeout(resolve, 50));
      }
    }
    
    console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} –∞–±–æ–Ω–µ–Ω—Ç–æ–≤`);
    console.log(`   - –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} –∞–±–æ–Ω–µ–Ω—Ç–æ–≤`);
    console.log(`   - –í—Å–µ–≥–æ: ${existingAbonents.size} –∞–±–æ–Ω–µ–Ω—Ç–æ–≤`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateAbonentsNames().then(() => {
  console.log('–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.');
  process.exit(0);
}).catch((error) => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 