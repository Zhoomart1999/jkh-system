// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –≤ Firebase
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs, limit } from 'firebase/firestore';

// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const firebaseConfig = {
  apiKey: "AIzaSyBBdniQX1DAdz8SJwO5SPgz8BHsXFsQeXA",
  authDomain: "jkh-system-new.firebaseapp.com",
  projectId: "jkh-system-new",
  storageBucket: "jkh-system-new.firebasestorage.app",
  messagingSenderId: "844684475393",
  appId: "1:844684475393:web:1afb72cbde9b286b545400",
  measurementId: "G-HNZMR544W1"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
async function checkAbonentsData() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –≤ Firebase...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 50 –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const abonentsRef = collection(db, 'abonents');
    const querySnapshot = await getDocs(abonentsRef);
    
    console.log(`üìä –í—Å–µ–≥–æ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: ${querySnapshot.size}`);
    
    if (querySnapshot.size === 0) {
      console.log('‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∞–±–æ–Ω–µ–Ω—Ç–æ–≤');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('\nüìã –ü–µ—Ä–≤—ã–µ 20 –∞–±–æ–Ω–µ–Ω—Ç–æ–≤:');
    console.log('='.repeat(80));
    
    let count = 0;
    querySnapshot.forEach((doc) => {
      if (count >= 20) return;
      
      const data = doc.data();
      console.log(`${count + 1}. ID: ${doc.id}`);
      console.log(`   –ò–º—è: ${data.fullName || '–ù–ï–¢ –ò–ú–ï–ù–ò'}`);
      console.log(`   –ê–¥—Ä–µ—Å: ${data.address || '–ù–ï–¢ –ê–î–†–ï–°–ê'}`);
      console.log(`   –õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç: ${data.personalAccount || '–ù–ï–¢'}`);
      console.log(`   –ë–∞–ª–∞–Ω—Å: ${data.balance || 0} —Å–æ–º`);
      console.log(`   –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä: ${data.controllerName || '–ù–ï –ù–ê–ó–ù–ê–ß–ï–ù'}`);
      console.log('   ' + '-'.repeat(40));
      
      count++;
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–±–æ–Ω–µ–Ω—Ç—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    console.log('\nüîç –ü–æ–∏—Å–∫ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏...');
    let badNamesCount = 0;
    let goodNamesCount = 0;
    
    querySnapshot.forEach((doc) => {
      const data = doc.data();
      if (data.fullName && 
          (data.fullName.includes('–ê–±–æ–Ω–µ–Ω—Ç') || 
           data.fullName.includes('–∞–±–æ–Ω–µ–Ω—Ç') ||
           data.fullName.includes('undefined') ||
           !data.fullName.trim())) {
        badNamesCount++;
        if (badNamesCount <= 10) {
          console.log(`‚ùå –ü–ª–æ—Ö–æ–µ –∏–º—è: "${data.fullName}" (ID: ${doc.id})`);
        }
      } else if (data.fullName && data.fullName.trim()) {
        goodNamesCount++;
      }
    });
    
    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–º–µ–Ω:`);
    console.log(`   - –•–æ—Ä–æ—à–∏–µ –∏–º–µ–Ω–∞: ${goodNamesCount}`);
    console.log(`   - –ü–ª–æ—Ö–∏–µ –∏–º–µ–Ω–∞: ${badNamesCount}`);
    console.log(`   - –í—Å–µ–≥–æ: ${querySnapshot.size}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥—Ä–µ—Å–∞
    console.log('\nüîç –ü–æ–∏—Å–∫ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏...');
    let badAddressesCount = 0;
    let goodAddressesCount = 0;
    
    querySnapshot.forEach((doc) => {
      const data = doc.data();
      if (data.address && 
          (data.address.includes('undefined') || 
           !data.address.trim() ||
           data.address.length < 5)) {
        badAddressesCount++;
        if (badAddressesCount <= 10) {
          console.log(`‚ùå –ü–ª–æ—Ö–æ–π –∞–¥—Ä–µ—Å: "${data.address}" (ID: ${doc.id})`);
        }
      } else if (data.address && data.address.trim()) {
        goodAddressesCount++;
      }
    });
    
    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥—Ä–µ—Å–æ–≤:`);
    console.log(`   - –•–æ—Ä–æ—à–∏–µ –∞–¥—Ä–µ—Å–∞: ${goodAddressesCount}`);
    console.log(`   - –ü–ª–æ—Ö–∏–µ –∞–¥—Ä–µ—Å–∞: ${badAddressesCount}`);
    console.log(`   - –í—Å–µ–≥–æ: ${querySnapshot.size}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkAbonentsData().then(() => {
  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  process.exit(0);
}).catch((error) => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 